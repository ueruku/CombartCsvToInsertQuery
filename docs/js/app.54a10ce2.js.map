{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?5b85","webpack:///./src/App.vue?e1fd","webpack:///./src/classes/OracleDB.ts","webpack:///./src/classes/Mysql.ts","webpack:///./src/classes/SqlServer.ts","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?bfbe","webpack:///./src/App.vue","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","render","_vm","this","_h","$createElement","_c","_self","staticStyle","width","margin","attrs","id","text-align","font-size","color","_v","staticClass","directives","rawName","expression","on","change","$event","$$selectedVal","Array","filter","target","options","selected","map","val","_value","dbType","multiple","textType","type","domProps","checked","isArray","multipleTable","_i","$$a","$$el","$$c","$$v","$$i","concat","for","disabled","firstLineTableName","input","composing","tableName","firstLineTableNameComment","_s","height","wrap","spellcheck","keydown","indexOf","_k","keyCode","preventDefault","inputTab","text","insertQuery","_m","staticRenderFns","background-color","OracleDB","[object Object]","columns","dataTable","encloseTableName","encloseColumnName","encloseData","checkDbLink","makeInsertQuery","makeMultipleInsertQuery","user_table","split","test","cols","col","row","some","nullstr","replace","join","query","Mysql","SqlServer","Appvue_type_script_lang_ts_","vue_runtime_esm","extend","computed","table","combartTsvToTable","combartCsvToTable","SliceMultipleTable","tbl","combartTableToInsertQuery","methods","blankIndex","findIndex","every","tables","deleteBlankRowFromTable","deleteTrailingBlankFromTable","tableNameComment","fistLine","columnLength","resizeArray","createInsertQuery","index","reverse","csvRows","csvRow","isContent","textArr","match","char1","char2","tsv","arr","initValue","len","fill","event","obj","cursorPosition","selectionStart","substr","selectionEnd","src_Appvue_type_script_lang_ts_","component","componentNormalizer","App","config","productionTip","h","$mount"],"mappings":"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","file":"js/app.54a10ce2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"80%\",\"margin\":\"0px auto\"},attrs:{\"id\":\"app\"}},[_c('div',{staticStyle:{\"text-align\":\"left\",\"font-size\":\"2em\",\"color\":\"gray\"}},[_vm._v(\"CSV→InsertQuery\")]),_c('div',{staticClass:\"input\"},[_c('label',[_vm._v(\"DBの種類\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.dbType),expression:\"dbType\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.dbType=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',[_vm._v(\"MySQL\")]),_c('option',[_vm._v(\"SQL Server\")]),_c('option',[_vm._v(\"Oracle\")])]),_c('label',[_vm._v(\"テキストの種類\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.textType),expression:\"textType\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.textType=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',[_vm._v(\"CSV\")]),_c('option',[_vm._v(\"TSV\")])]),_c('hr'),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.multipleTable),expression:\"multipleTable\"}],attrs:{\"type\":\"checkbox\",\"id\":\"cb_multipleTable\"},domProps:{\"checked\":Array.isArray(_vm.multipleTable)?_vm._i(_vm.multipleTable,null)>-1:(_vm.multipleTable)},on:{\"change\":function($event){var $$a=_vm.multipleTable,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.multipleTable=$$a.concat([$$v]))}else{$$i>-1&&(_vm.multipleTable=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.multipleTable=$$c}}}}),_c('label',{attrs:{\"for\":\"cb_multipleTable\"}},[_vm._v(\"複数テーブルを空行で区切る\")]),_c('hr'),_c('label',[_vm._v(\"テーブル名\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tableName),expression:\"tableName\"}],attrs:{\"disabled\":_vm.multipleTable || _vm.firstLineTableName},domProps:{\"value\":(_vm.tableName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.tableName=$event.target.value}}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.firstLineTableName),expression:\"firstLineTableName\"}],attrs:{\"type\":\"checkbox\",\"id\":\"cb_firstLineTableName\"},domProps:{\"checked\":Array.isArray(_vm.firstLineTableName)?_vm._i(_vm.firstLineTableName,null)>-1:(_vm.firstLineTableName)},on:{\"change\":function($event){var $$a=_vm.firstLineTableName,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.firstLineTableName=$$a.concat([$$v]))}else{$$i>-1&&(_vm.firstLineTableName=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.firstLineTableName=$$c}}}}),_c('label',{attrs:{\"for\":\"cb_firstLineTableName\"}},[_vm._v(\"1行目をテーブル名とする\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.firstLineTableNameComment),expression:\"firstLineTableNameComment\"}],attrs:{\"type\":\"checkbox\",\"id\":\"cb_firstLineTableNameComment\",\"disabled\":!_vm.firstLineTableName},domProps:{\"checked\":Array.isArray(_vm.firstLineTableNameComment)?_vm._i(_vm.firstLineTableNameComment,null)>-1:(_vm.firstLineTableNameComment)},on:{\"change\":function($event){var $$a=_vm.firstLineTableNameComment,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.firstLineTableNameComment=$$a.concat([$$v]))}else{$$i>-1&&(_vm.firstLineTableNameComment=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.firstLineTableNameComment=$$c}}}}),_c('label',{attrs:{\"for\":\"cb_firstLineTableNameComment\"}},[_vm._v(\"隣をコメントとする\")]),_c('hr'),_c('label',[_vm._v(_vm._s(_vm.textType))]),_c('br'),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.text),expression:\"text\"}],staticStyle:{\"width\":\"80%\",\"height\":\"10em\"},attrs:{\"wrap\":\"off\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.text)},on:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"tab\",9,$event.key,\"Tab\")){ return null; }$event.preventDefault();return _vm.inputTab($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.text=$event.target.value}}})]),_c('label',[_vm._v(\"Query\")]),_c('br'),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.insertQuery),expression:\"insertQuery\"}],staticClass:\"result\",staticStyle:{\"width\":\"80%\",\"height\":\"10em\"},attrs:{\"wrap\":\"off\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.insertQuery)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.insertQuery=$event.target.value}}}),_c('br'),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"fit-content\",\"margin\":\"0px auto\",\"background-color\":\"#ccc\"}},[_vm._v(\"\\n    ※使い方\\n    \"),_c('div',{staticStyle:{\"width\":\"fit-content\",\"text-align\":\"left\",\"margin\":\"0px auto\"}},[_vm._v(\"\\n      ・インサート先のDBの種類を選ぶ\\n      \"),_c('br'),_vm._v(\"・テキストの種類を選ぶ\\n      \"),_c('br'),_vm._v(\"・テーブル名を入力する\\n      \"),_c('br'),_vm._v(\"・カラム+データが載ってるテキストを貼り付ける\\n      \"),_c('br'),_vm._v(\"・Queryに出てくる\\n    \")])])}]\n\nexport { render, staticRenderFns }","export default class OracleDB {\r\n\r\n    /** INSERT クエリを作る */\r\n    static createInsertQuery(tableName: string, columns: string[], dataTable: string[][]): string {\r\n        // 囲い文字で囲っとく\r\n        tableName = this.encloseTableName(tableName);\r\n        columns = this.encloseColumnName(columns);\r\n        dataTable = this.encloseData(dataTable);\r\n\r\n        // 一行だけなら INSERT INTO にしとく\r\n        // DBLinkが有る場合、 INSERT ALL は使えないので INSERT INTO にしとく\r\n        if (dataTable.length <= 1 || this.checkDbLink(tableName))\r\n            return this.makeInsertQuery(tableName, columns, dataTable);\r\n\r\n        return this.makeMultipleInsertQuery(tableName, columns, dataTable);\r\n    }\r\n\r\n    /** テーブル名を識別子にする\r\n     * \r\n     * - 既に囲われてたら何もしない\r\n     * - DBLinkがあるなら何もしない\r\n     *     - ※A5SQLでクエリを投げる場合、DBLink指定の\"@\"が、変数の\"@\"と認識されて誤作動を起こす。\r\n     *       下記設定で無効にすればいいが、テーブル名に小文字や予約語はあまりないので、囲まないようにしている。\r\n     *       ・設定(P)→オプション(O)→タブ「SQL」→パラメータ利用モード\r\n     */\r\n    private static encloseTableName(tableName: string): string {\r\n        if (this.checkDbLink(tableName)) return tableName;\r\n\r\n        // ユーザー指定がある場合、テーブル名だけ囲うようにする\r\n        const user_table = tableName.split('.');\r\n        if (user_table.length === 2){\r\n            if (/^\".*\"$/.test(user_table[1])) return tableName;\r\n            return user_table[0] + '.' + '\"' + user_table[1] + '\"';\r\n        }\r\n\r\n        if (/^\".*\"$/.test(tableName)) return tableName;\r\n        return '\"' + tableName + '\"';\r\n    }\r\n\r\n    /** カラム名を識別子にする\r\n     * \r\n     * 予約語のカラム名対策。\r\n     * \r\n     * - 既に囲われてたら何もしない\r\n     */\r\n    private static encloseColumnName(cols: string[]): string[] {\r\n        return cols.map(col => {\r\n            if (/^\".*\"$/.test(col)) return col;\r\n            return '\"' + col + '\"';\r\n        });\r\n    }\r\n\r\n    /** データを文字列にする\r\n     * \r\n     * データを登録する際、データを文字列にしておけば\r\n     * RDBMS側で適切にキャストしてくれる。\r\n     * \r\n     * - NULL文字がある場合、NULLとする\r\n     * - シングルクォートはエスケープする\r\n     * - 既に囲われてたら何もしない\r\n     */\r\n    private static encloseData(dataTable: string[][]): string[][] {\r\n        return dataTable.map(row => {\r\n            return row.map(col => {\r\n                if ([\"(NULL)​\", \"« NULL »\"].some(nullstr => col === nullstr)) return \"NULL\";\r\n                if (/^'.*'$/.test(col)) return col;\r\n                return \"'\" + col.replace(/'/g, \"''\") + \"'\";\r\n            });\r\n        });\r\n    }\r\n\r\n    /** DBLinkが含まれているかチェック */\r\n    private static checkDbLink(tableName: string): boolean {\r\n        return /@/.test(tableName);\r\n    }\r\n\r\n    /** INSERT INTO クエリを作る\r\n     * \r\n     * dataTableの行数分クエリを作成する。\r\n     */\r\n    private static makeInsertQuery(tableName: string, columns: string[], dataTable: string[][]): string {\r\n        return dataTable\r\n            .map(cols =>\r\n                \"INSERT INTO \" +\r\n                tableName +\r\n                \" (\" +\r\n                columns.join(\",\") +\r\n                \")\" +\r\n                \" VALUES (\" +\r\n                cols.join(\",\") +\r\n                \");\")\r\n            .join(\"\\n\");\r\n    }\r\n\r\n    /** INSERT ALL クエリを作る */\r\n    private static makeMultipleInsertQuery(tableName: string, columns: string[], dataTable: string[][]): string {\r\n        let query = \"\";\r\n        query += \"INSERT ALL\\n\";\r\n        query += dataTable\r\n            .map(cols => \"INTO \" +\r\n                tableName +\r\n                \" (\" +\r\n                columns.join(\",\") +\r\n                \")\" +\r\n                \" VALUES (\" +\r\n                cols.join(\",\") +\r\n                \")\")\r\n            .join(\"\\n\");\r\n        query += \"\\nSELECT * FROM DUAL;\";\r\n        return query;\r\n    }\r\n}","export default class Mysql {\r\n\r\n    /** INSERT クエリを作る */\r\n    static createInsertQuery(tableName: string, columns: string[], dataTable: string[][]): string {\r\n        // 囲い文字で囲っとく\r\n        tableName = this.encloseTableName(tableName);\r\n        columns = this.encloseColumnName(columns);\r\n        dataTable = this.encloseData(dataTable);\r\n\r\n        return this.makeMultipleInsertQuery(tableName, columns, dataTable);\r\n    }\r\n\r\n    /** テーブル名を識別子にする\r\n     * \r\n     * - 既に囲われてたら何もしない\r\n     */\r\n    private static encloseTableName(tableName: string): string {\r\n        // スキーマも囲う\r\n        return tableName.split('.').map(name =>\r\n            (/^'.*'$/.test(name)) ? name : \"'\" + name + \"'\"\r\n        ).join(\".\");\r\n    }\r\n\r\n    /** カラム名を識別子にする\r\n     * \r\n     * 予約語のカラム名対策。\r\n     * \r\n     * - 既に囲われてたら何もしない\r\n     */\r\n    private static encloseColumnName(cols: string[]): string[] {\r\n        return cols.map(col => {\r\n            if (/^'.*'$/.test(col)) return col;\r\n            return \"'\" + col + \"'\";\r\n        });\r\n    }\r\n\r\n    /** データを文字列にする\r\n     * \r\n     * データを登録する際、データを文字列にしておけば\r\n     * RDBMS側で適切にキャストしてくれる。\r\n     * \r\n     * - NULL文字がある場合、NULLとする\r\n     * - シングルクォートはエスケープする\r\n     * - 既に囲われてたら何もしない\r\n     */\r\n    private static encloseData(dataTable: string[][]): string[][] {\r\n        return dataTable.map(row => {\r\n            return row.map(col => {\r\n                if ([\"(NULL)​\", \"« NULL »\"].some(nullstr => col === nullstr)) return \"NULL\";\r\n                if (/^'.*'$/.test(col)) return col;\r\n                return \"'\" + col.replace(/'/g, \"''\") + \"'\";\r\n            });\r\n        });\r\n    }\r\n\r\n    /** INSERT クエリを作る */\r\n    private static makeMultipleInsertQuery(tableName: string, columns: string[], dataTable: string[][]): string {\r\n        return \"INSERT INTO \" +\r\n            tableName +\r\n            \" (\" +\r\n            columns.join(\",\") +\r\n            \")\" +\r\n            \"\\nVALUES \" +\r\n            dataTable.map(cols => \"(\" + cols.join(\",\") + \")\").join(\"\\n    ,\") +\r\n            \";\";\r\n    }\r\n}","export default class SqlServer {\r\n\r\n    /** INSERT クエリを作る */\r\n    static createInsertQuery(tableName: string, columns: string[], dataTable: string[][]): string {\r\n        // 囲い文字で囲っとく\r\n        tableName = this.encloseTableName(tableName);\r\n        columns = this.encloseColumnName(columns);\r\n        dataTable = this.encloseData(dataTable);\r\n\r\n        return this.makeMultipleInsertQuery(tableName, columns, dataTable);\r\n    }\r\n\r\n    /** テーブル名を識別子にする\r\n     * \r\n     * - 既に囲われてたら何もしない\r\n     */\r\n    private static encloseTableName(tableName: string): string {\r\n        // スキーマも囲う\r\n        return tableName.split('.').map(name =>\r\n            (/^\\[.*\\]$/.test(name)) ? name : \"[\" + name + \"]\"\r\n        ).join(\".\");\r\n    }\r\n\r\n    /** カラム名を識別子にする\r\n     * \r\n     * 予約語のカラム名対策。\r\n     * \r\n     * - 既に囲われてたら何もしない\r\n     */\r\n    private static encloseColumnName(cols: string[]): string[] {\r\n        return cols.map(col =>\r\n            (/^\\[.*\\]$/.test(col)) ? col : \"[\" + col + \"]\"\r\n        );\r\n    }\r\n\r\n    /** データを文字列にする\r\n     * \r\n     * データを登録する際、データを文字列にしておけば\r\n     * RDBMS側で適切にキャストしてくれる。\r\n     * \r\n     * - NULL文字がある場合、NULLとする\r\n     * - シングルクォートはエスケープする\r\n     * - 既に囲われてたら何もしない\r\n     */\r\n    private static encloseData(dataTable: string[][]): string[][] {\r\n        return dataTable.map(row => {\r\n            return row.map(col => {\r\n                if ([\"(NULL)​\", \"« NULL »\"].some(nullstr => col === nullstr)) return \"NULL\";\r\n                return (/^'.*'$/.test(col)) ? col : \"'\" + col.replace(/'/g, \"''\") + \"'\";\r\n            });\r\n        });\r\n    }\r\n\r\n    /** INSERT クエリを作る */\r\n    private static makeMultipleInsertQuery(tableName: string, columns: string[], dataTable: string[][]): string {\r\n        return \"INSERT INTO \" +\r\n            tableName +\r\n            \" (\" +\r\n            columns.join(\",\") +\r\n            \")\" +\r\n            \"\\nVALUES \" +\r\n            dataTable.map(cols => \"(\" + cols.join(\",\") + \")\").join(\"\\n    ,\") +\r\n            \";\";\r\n    }\r\n}","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport OracleDB from \"./classes/OracleDB\";\nimport Mysql from \"./classes/Mysql\";\nimport SqlServer from \"./classes/SqlServer\";\n\nexport default Vue.extend({\n  name: \"app\",\n  data() {\n    return {\n      dbType: \"MySQL\",\n      textType: \"TSV\",\n      tableName: \"\",\n      multipleTable: false,\n      firstLineTableName: true,\n      firstLineTableNameComment: true,\n      text: \"\"\n    };\n  },\n  // 算出プロパティ\n  computed: {\n    /** Queryのテキスト */\n    insertQuery(): string {\n      let table =\n        this.textType === \"TSV\"\n          ? this.combartTsvToTable(this.text)\n          : this.textType === \"CSV\"\n          ? this.combartCsvToTable(this.text)\n          : [];\n\n      if (this.multipleTable) {\n        // 複数のテーブルに分け、それぞれをInsertクエリに変換\n        return this.SliceMultipleTable(table)\n          .map(tbl => this.combartTableToInsertQuery(tbl))\n          .join(\"\\n\\n\");\n      } else {\n        return this.combartTableToInsertQuery(table);\n      }\n    }\n  },\n  methods: {\n    /** 2次元配列を空行で分ける */\n    SliceMultipleTable(table: string[][]): string[][][] {\n      let blankIndex = table.findIndex(\n        row => row.length === 0 || row.every(col => col === \"\")\n      );\n      let tables: string[][][] = [];\n      while (-1 < blankIndex) {\n        if (0 < blankIndex) tables.push(table.slice(0, blankIndex));\n        table = table.slice(blankIndex + 1);\n        blankIndex = table.findIndex(\n          row => row.length === 0 || row.every(col => col === \"\")\n        );\n      }\n      tables.push(table.slice(0, table.length));\n      return tables;\n    },\n\n    /** 2次元配列の内容からInsertクエリを作成 */\n    combartTableToInsertQuery(table: string[][]): string {\n      // 余計な空行を削除\n      table = this.deleteBlankRowFromTable(table);\n      if (table.length === 0) return \"\";\n\n      // 末尾の空白を削除\n      table = this.deleteTrailingBlankFromTable(table);\n\n      // テーブル名/コメントを用意\n      let tableName = this.tableName;\n      let tableNameComment = \"\";\n      if (this.firstLineTableName) {\n        // 1行目がテーブル名なら、取得してセットしてデータテーブルから外す\n        const fistLine = table[0].filter(col => col !== \"\");\n        tableName = fistLine[0];\n        if (this.firstLineTableNameComment && 1 < fistLine.length)\n          tableNameComment = \"-- \" + fistLine[1];\n        table = table.slice(1);\n      }\n\n      // カラム列に合わせて末尾に空白をセット\n      const columnLength = table[0].length;\n      table = table.map(row => this.resizeArray(row, columnLength, \"\"));\n\n      // カラム列を用意\n      const columns = table[0];\n      table = table.slice(1);\n\n      // データ行を用意\n      const dataTable = table;\n      table = [];\n\n      // クエリを組み立てる\n      let query = \"\";\n      // コメント\n      query += tableNameComment !== \"\" ? tableNameComment + \"\\n\" : \"\";\n      // Insertクエリ\n      query +=\n        this.dbType === \"MySQL\"\n          ? Mysql.createInsertQuery(tableName, columns, dataTable)\n          : this.dbType === \"SQL Server\"\n          ? SqlServer.createInsertQuery(tableName, columns, dataTable)\n          : this.dbType === \"Oracle\"\n          ? OracleDB.createInsertQuery(tableName, columns, dataTable)\n          : \"\";\n\n      return query;\n    },\n\n    /** 2次元配列から空行を削除 */\n    deleteBlankRowFromTable(table: string[][]): string[][] {\n      return table.filter(row => row.some(col => col !== \"\"));\n    },\n\n    /** 2次元配列から末尾が空文字の項を削除 */\n    deleteTrailingBlankFromTable(table: string[][]): string[][] {\n      return table.map(row => {\n        const index =\n          row.length -\n          row\n            .slice()\n            .reverse()\n            .findIndex(col => col !== \"\");\n        if (row.length < index) return [];\n        return row.slice(0, index);\n      });\n    },\n\n    /** CSV→2次元配列 */\n    combartCsvToTable(text: string): string[][] {\n      let csvRows: string[][] = [];\n      let csvRow: string[] = [];\n\n      // 項目の文字列をくみ上げる(一時変数)\n      let value = \"\";\n\n      // 「\"」内フラグ\n      let isContent = false;\n\n      // 1文字づつ進める\n      const textArr =\n        text.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\s\\S]/g) || [];\n      for (let i = 0; i < textArr.length; ++i) {\n        let char1 = textArr[i];\n\n        if (isContent) {\n          // 「\"」内\n          if (char1 === '\"') {\n            // 「\"」が来たら2文字目を見る\n            let char2 = textArr[i + 1];\n            if (char2 === '\"') {\n              // 「\"\"」ならエスケープされた「\"」なので、「\"」をセットする\n              value += '\"';\n              // 2文字目は対応をしたので飛ばす\n              ++i;\n            } else {\n              isContent = false;\n            }\n          } else {\n            value += char1;\n          }\n          continue;\n        }\n\n        // 「\"」外\n        if (char1 === '\"') {\n          isContent = true;\n        } else if (char1 === \",\") {\n          csvRow.push(value);\n          value = \"\";\n        } else if (char1 === \"\\n\") {\n          // 改行が来たら改行する\n          csvRow.push(value);\n          value = \"\";\n          csvRows.push(csvRow);\n          csvRow = [];\n        } else {\n          value += char1;\n        }\n      }\n\n      if (value !== \"\") {\n        // valueが有るならセット\n        csvRow.push(value);\n        value = \"\";\n        csvRows.push(csvRow);\n        csvRow = [];\n      }\n\n      return csvRows;\n    },\n    /** TSV→2次元配列 */\n    combartTsvToTable(tsv: string): string[][] {\n      return tsv.split(\"\\n\").map(row => row.split(\"\\t\"));\n    },\n\n    /** 配列の長さを変える\n     *\n     * - 元の配列より長くする：末尾に初期値を埋めて長くする\n     * - 短くする：末尾を切り落とす\n     * - 同じサイズ：何もしない\n     * lengthにマイナスを入れるとUB。\n     */\n    resizeArray(arr: any[], length: number, initValue: any): any[] {\n      const len = length - arr.length;\n      if (len === 0) return arr;\n      if (len < 0) return arr.slice(0, length);\n      return arr.concat(Array(len).fill(initValue));\n    },\n\n    /** タブ入力をさせる */\n    inputTab(event: any) {\n      let obj = event.target;\n\n      // 現在のカーソルの位置を取得\n      const cursorPosition = obj.selectionStart;\n\n      // カーソル位置にタブ挿入\n      obj.value =\n        obj.value.substr(0, cursorPosition) +\n        \"\\t\" +\n        obj.value.substr(cursorPosition, obj.value.length);\n\n      // カーソルを進める\n      obj.selectionEnd = cursorPosition + 1;\n    }\n  }\n});\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/ts-loader/index.js??ref--12-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/ts-loader/index.js??ref--12-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=72bfc612&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}